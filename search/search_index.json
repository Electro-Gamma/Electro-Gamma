{"config":{"lang":["en","ar"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome_to_electro_gamma","title":"Welcome to Electro Gamma","text":"<p>At Electro Gamma, we are passionate about Linux, Open Source Software, Open Source Hardware, and the exciting world of electronics. Whether you are a developer, maker, or enthusiast, we provide a variety of tutorials, resources, and guides to help you explore and build with open technologies. </p>"},{"location":"#our_focus","title":"Our Focus","text":"<p>We cover a range of topics to cater to beginners and advanced users alike:</p>"},{"location":"#1_linux_and_open_source_software","title":"1. Linux and Open Source Software","text":"<p>Linux is the foundation of our work, and we believe in the power of open source to foster innovation. Our tutorials help you: - Install and configure Linux on various devices, including desktops, laptops, and single-board computers. - Learn about post-installation steps for popular Linux distributions like Ubuntu, Fedora, and Debian. - Explore open source tools for productivity, security, and development.</p>"},{"location":"#2_open_source_hardware","title":"2. Open Source Hardware","text":"<p>The revolution in open hardware is transforming how we approach electronics. We focus on: - Arduino: Dive into the world of microcontrollers with Arduino, learning how to build everything from simple sensors to complex projects. - Raspberry Pi: A powerful yet affordable platform for prototyping, home automation, and educational projects. Learn how to set up and build various projects with Raspberry Pi. - ESP32 and ESP8266: Explore IoT with these low-cost, Wi-Fi-enabled microcontrollers that are perfect for smart devices.</p>"},{"location":"#3_electronics_and_diy_projects","title":"3. Electronics and DIY Projects","text":"<p>Building things with your hands is at the core of the maker movement. We provide guides and projects for: - Electronic circuits: Learn the basics of electronics, from resistors and capacitors to transistors and ICs. - DIY projects: Create gadgets like smart lights, security systems, and custom sensors using open hardware and open source software.</p>"},{"location":"#4_community_and_collaboration","title":"4. Community and Collaboration","text":"<p>Open source is all about collaboration. We believe in sharing knowledge and contributing to the community. You can: - Contribute to our open source projects on GitHub. - Follow our tutorials to replicate projects and build your own creations. - Join our discussions on forums and GitHub issues to connect with fellow enthusiasts.</p>"},{"location":"#check_out_our_youtube_channel","title":"Check Out Our YouTube Channel","text":"<p>We regularly post tutorials, reviews, and projects on our Electro Gamma YouTube Channel. Subscribe to stay updated with our latest content on Linux, Arduino, Raspberry Pi, and more!</p> <p></p> <p>Subscribe </p>"},{"location":"#join_us","title":"Join Us","text":"<p>We welcome anyone interested in open technology, whether you are a beginner or an expert. Stay tuned for more tutorials, guides, and projects, and don\u2019t forget to contribute your ideas!</p> <p>Together, we can build a future where technology is open, accessible, and collaborative.</p>"},{"location":"#latest_posts","title":"Latest Posts","text":""},{"location":"Tutorials/Router-Scripts/","title":"Router-Scripts","text":""},{"location":"Tutorials/Router-Scripts/#mf253v_router_script","title":"MF253V Router Script","text":"<p>This repository contains a Python script (<code>Router.py</code>) designed to interact with the MF253V router. The script allows you to manage and configure various settings such as Wi-Fi, blacklists, and network connections through HTTP requests.</p>"},{"location":"Tutorials/Router-Scripts/#features","title":"Features","text":"<ul> <li>Wi-Fi Management: Enable, disable, or configure Wi-Fi settings.</li> <li>Blacklist Management: Add or remove devices from the router's blacklist.</li> <li>Network Configuration: Set up network parameters such as IP addresses, DNS, etc.</li> <li>Real-time Status: Retrieve real-time information about the router's status.</li> </ul>"},{"location":"Tutorials/Router-Scripts/#requirements","title":"Requirements","text":"<ul> <li>Python 3.x</li> <li>Requests Library: Install using <code>pip install requests</code></li> </ul>"},{"location":"Tutorials/Router-Scripts/#usage","title":"Usage","text":"<ol> <li>Clone this repository to your local machine:    <code>bash    git clone https://github.com/Electro-Gamma/Router-Scripts.git</code></li> <li>Navigate to the project directory:    <code>bash    cd Router-Scripts</code></li> <li>Install the required dependencies:    <code>bash    pip install -r requirements.txt</code></li> <li>Run the script:    <code>bash    python Router.py</code></li> </ol>"},{"location":"Tutorials/Router-Scripts/#configuration","title":"Configuration","text":"<p>The script may require you to configure certain parameters such as the router's IP address, username, and password. These can be set within the script file (Router.py).</p>"},{"location":"Tutorials/Router-Scripts/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter any issues while using the script, please ensure that:</p> <ol> <li>The router's IP address is correctly configured.</li> <li>Your device is connected to the router's network.</li> <li>You have the necessary permissions to modify router settings.    </li> </ol>"},{"location":"Tutorials/Router-Scripts/#contributions","title":"Contributions","text":"<p>Contributions to this project are welcome! Please submit a pull request or open an issue to discuss your ideas.</p>"}]}